{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "VM Name"
            }
        },
        "customUri": {
            "type": "string",
            "metadata": {
                "description": "Uri for SAP Bits"
            }
        },
        "HANAsubnetRef": {
            "type": "string",
            "metadata": {
                "description": "The Hana subnet reference ID"
            }
        },
        "OperatingSystem": {
            "type": "string",
            "metadata": {
                "description": "Operating system for HANA Machine"
            },
            "defaultValue": "SLES for SAP 12 SP5",
            "allowedValues": [
                "SLES for SAP 12 SP5",
                "RHEL 7.2 for SAP HANA"
            ]
        },
        "vmUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine"
            },
            "defaultValue": "testuser"
        },
        "vmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine"
            },
            "defaultValue": "Hana07061992!"
        },
		"hanaVers": {
            "type": "string",
            "defaultValue": "2.0",
            "allowedValues": [
                "1.0",
                "2.0"
				],
			"metadata": {
                "description": "SAP HANA Version 1.0 ou 2.0"
            }
            
        },
        "hanaSid": {
            "type": "string",
            "metadata": {
                "description": "SAP HANA System ID"
            },
            "defaultValue": "H10"
        },
        "hanaNumber": {
            "type": "string",
            "metadata": {
                "description": "SAP HANA Instance Number"
            },
            "defaultValue": "00"
        },      
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of VM to deploy"
            }
        },
        "IPAllocationMethod": {
            "type": "string",
            "allowedValues" : [
              "Dynamic",
              "Static"
            ],
            "metadata": {
                "description": "IP Allocation Method"
          }
        },
		"IPPublic": {
            "type": "string",
            "allowedValues" : [
              "yes",
              "no"
            ],
            "metadata": {
                "description": "Choose whether to acquire a public IP"
          },
          "defaultValue": "yes"
        },
		"DnSName": {
            "type": "string",
            "metadata": {
                "description": "DNS Name for public IP only"
            }
        },
        "StaticIP": {
          "type": "string",
          "metadata": {
            "description": "IP Address for the HANA VM when Static IP Allocation Method has been selected"
          },
          "defaultValue": "10.0.5.4"
        },               
		"AutoShutdown": {
          "type": "string",
          "allowedValues": [
                "yes",
                "no"
				
            ],       
            "metadata": {
                "description": "Define an autoshutdown for your VM"
            },
            "defaultValue": "yes"

        }
    },
    "variables": {
        "api-version": "2017-06-01",
        "api-version-vm": "2019-11-01",
        "mode": "Push",
        "nicName": "[if (equals(parameters('IPAllocationMethod'),'Static'), concat(parameters('vmName'),'-static'), concat(parameters('vmName'),'-dynamic'))]",
        "subnetRef": "[parameters('HANASubnetRef')]",
        "OperatingSystemSpec":{
            "imagePublisher":"[if (contains(parameters('OperatingSystem'),'SLES'),'SUSE','RedHat')]",
            "imageOffer":"[if (contains(parameters('OperatingSystem'),'12 SP5'),'sles-sap-12-sp5','RHEL-SAP-HANA')]",
            "sku":"[if (contains(parameters('OperatingSystem'),'SLES'),'gen1','7.2')]"
        },
        "diskConfig": "[variables(concat('diskConfig_', parameters('vmSize')))]",
        "diskConfig_Standard_E16s_v3": {
            "shared": 511,
            "sap": 63,
            "backup": 255,
            "data1": 511,
            "data2": 511
        },
        "diskConfig_Standard_E32s_v3": {
            "shared": 511,
            "sap": 63,
            "backup": 511,
            "data1": 511,
            "data2": 511
        },
        "diskConfig_Standard_E64s_v3": {
            "shared": 511,
            "sap": 63,
            "backup": 1023,
            "data1": 511,
            "data2": 511
        },
        "diskConfig_Standard_GS5": {
            "shared": 511,
            "sap": 63,
            "backup": 1023,
            "data1": 511,
            "data2": 511
        }
      },
  "resources": [

		    { 
     "condition": "[equals(parameters('AutoShutdown'), 'Yes')]",
     "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]", 
     "type": "microsoft.devtestlab/schedules", 
     "name": "[concat('shutdown-computevm-',parameters('vmName'))]", 
     "location": "[resourceGroup().location]", 
     "dependsOn": [ 
         "[concat('Microsoft.Compute/virtualMachines/',concat(parameters('vmName')))]" 
     ], 
     "properties": { 
         "status": "Enabled", 
         "taskType": "ComputeVmShutdownTask", 
         "dailyRecurrence": { 
             "time": "1900" 
         }, 
         "timeZoneId": "Romance Standard Time", 
         "notificationSettings": { 
             "status": "Disabled", 
             "timeInMinutes": 15 
         }, 
         "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName')))]" 
     } 
 }, 
 
    {
      "condition": "[equals(parameters('IPAllocationMethod'), 'Dynamic')]",
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-dynamic')]",
      "location": "[resourceGroup().location]",
	  "dependsOn": [ 
         "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmName'), '-IPPublic')]" 
		 ], 
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmName'),'-ipcfg')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
			  "publicIPAddress": { 
			  "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),'-IPPublic'))]" 
                }, 

              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('IPAllocationMethod'), 'Static')]",
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-static')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ 
         "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmName'), '-IPPublic')]" 
		 ], 
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmName'),'-ipcfg')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
			  "privateIPAddress": "[parameters('StaticIP')]",
			  "publicIPAddress": { 
			  "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),'-IPPublic'))]" 
                }, 
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
	{
	  "condition": "[equals(parameters('IPPublic'), 'yes')]",
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-IPPublic')]",
      "location": "[resourceGroup().location]",
      "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 30,
				"dnsSettings": {
                    "domainNameLabel": "[parameters('DnSName')]",
                    "fqdn": "[concat(parameters('DnSName'),'.westeurope.cloudapp.azure.com')]"
            }
		}	
	
	},
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'-shared')]",
      "apiVersion": "[variables('api-version-vm')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[variables('diskConfig').shared]"
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'-sap')]",
      "apiVersion": "[variables('api-version-vm')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[variables('diskConfig').sap]"
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'-backup1')]",
      "apiVersion": "[variables('api-version-vm')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[variables('diskConfig').backup]"
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'-data1')]",
      "apiVersion": "[variables('api-version-vm')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[variables('diskConfig').data1]"
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'-data2')]",
      "apiVersion": "[variables('api-version-vm')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[variables('diskConfig').data2]"
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
        "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-shared'))]",
        "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-sap'))]",
        "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-backup1'))]",
        "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-data1'))]",
        "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-data2'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmUserName')]",
          "adminPassword": "[parameters('vmPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('OperatingSystemSpec').imagePublisher]",
            "offer": "[variables('OperatingSystemSpec').imageOffer]",
            "sku": "[variables('OperatingSystemSpec').sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "lun": 0,
              "createOption": "attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-shared'))]"
              }
            },
            {
              "lun": 1,
              "createOption": "attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-sap'))]"
              }
            },
            {
              "lun": 2,
              "createOption": "attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-backup1'))]"
              }
            },
            {
              "lun": 3,
              "createOption": "attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-data1'))]"
              }
            },
            {
              "lun": 4,
              "createOption": "attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmName'),'-data2'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },


	  
        "resources": [
          {
            "name": "scriptextension",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-12-01",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "https://raw.githubusercontent.com/wkdang/SAPonAzure/master/scripts/small.sh"
                ],
                "commandToExecute": "[concat('sh small.sh ', parameters('customUri'), ' ' , parameters('vmUserName'), ' ', parameters('vmPassword'),' ', parameters('HANASID'), ' ', parameters('HANANUMBER'), ' ', parameters('HANAVERS'), ' ', parameters('OperatingSystem'))]"
              }
            }
          }
        ]
      }
       
    ],
    "outputs": {}
}
